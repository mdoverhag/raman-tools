name: Build and Release

on:
  push:
    branches: [master]
    tags:
      - "v*"
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install frontend dependencies
        run: bun install

      - name: Run frontend type checks
        run: bun run check

      - name: Run Rust tests
        working-directory: src-tauri
        run: cargo test

      - name: Check Rust formatting
        working-directory: src-tauri
        run: cargo fmt -- --check

      - name: Run Rust clippy
        working-directory: src-tauri
        run: cargo clippy -- -D warnings

  build:
    needs: test
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-aarch64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install frontend dependencies
        run: bun install

      - name: Build and sign Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        with:
          args: --target ${{ matrix.target }}

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: raman-tools-${{ matrix.name }}
          path: src-tauri/target/${{ matrix.target }}/release/bundle/msi/*.msi

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: raman-tools-${{ matrix.name }}
          path: src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.msi
            artifacts/**/*.dmg
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
